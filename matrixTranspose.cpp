
/*
 * Напишите функцию, которая принимает на вход целочисленную матрицу M
 * (другими словами, просто двумерный целочисленный массив) размера
 * rows×cols, и возвращает транспонированную матрицу M^T (тоже двумерный
 * целочисленный массив) размера cols×rows. Если в M на пересечении i-ой
 * строки и j-ого столбца стояло число x, то на пересечении  j-ой строки
 * и i-ого столбца в матрице M^T тоже будет стоять число x, или другими
 * словами M^T[j][i] = M[i][j].
 *
 * Обратите внимание, что вам неизвестно, каким именно способом выделялась
 * память для массива M. Выделять память под массив M^T можете любым
 * удобным вам способом. Изменять исходную матрицу нельзя.
 *
 * Требования к реализации: при выполнении этого задания вы можете
 * определять любые вспомогательные функции. Вводить или выводить
 * что-либо не нужно. Реализовывать функцию main не нужно.
 */

int ** createMatrix(unsigned int rows, unsigned int cols)
{
    int ** matrix = new int *[rows];
    for (unsigned int i = 0; i != rows; i++)
    {
        matrix[i] = new int[cols];
    }
    return matrix;
}

int ** transpose(const int * const * m, unsigned int rows, unsigned int cols)
{
    // выделение памяти
    int ** new_m = createMatrix(cols, rows);

    // транспонирование
    for (unsigned int i = 0; i != rows; i++)
    {
        for (unsigned int j = 0; j != cols; j++)
        {
            new_m[j][i] = m[i][j];
        }
    }

    return new_m;
}
